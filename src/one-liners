
# Ignore contents of a .git directory in find
find . -not -iwholename './.git*' ...

# Convert line-endings of files in a tree from dos to UNIX
find . ... -exec vi +':w ++ff=unix' +':q' {} \;

# Install package without curses window prompt
sudo DEBIAN_FRONTEND=noninteractive apt-get -y install <pkg>

# Download Youtube video (From https://github.com/rghose/youtube-downloader )
curl "`curl -H 'Upgrade-insecure-requests: 1' -H 'Cache-control: max-age=0' -H 'Accept-language: en-US,en;q=0.8,bn;q=0.6' -H 'Accept-encoding: gzip, deflate, sdch' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.106 Safari/537.36' "https://www.youtube.com/watch?v=8ZtInClXe1Q" | gunzip | egrep -o 'https%3A%2F%2F[^\.]*\.googlevideo.com%2F[^,\]*' | perl -pe 's/\%(\w\w)/chr hex $1/ge' | head -n1`"  -o video.m4v

# Shuffle lines of a file
awk 'BEGIN {srand(); OFMT="%.17f"} {print rand(), $0}' ... | sort -k1,1n | cut -d ' ' -f2-

# Checkout all projects in a file `project` from a list of students where the
# `users` file is of the form githandle/username
while read -u 9 project; do  mkdir $project; while read -u 8 user; do git clone -o github git@github.com:${user/ */}/$project.git $project/${user/* /}; done 8<~/users ;   done 9<projectlist

# Check out all users' version of a project
while read -u 8 user; do git clone -o github git@github.com:${user/ */}/projectname.git $project/${user/* /}; done 8<~/users ;

# Hexdump, 8 bytes per line.
hexdump -ve '"%08_ax\t" 8/1 "%02x " "\n"' $1

# Combine the results of two COUNT(...), hid queries, and then sort them into a .csv file
for file in mis.*; do perl -e'sub x{my$x=shift;<$x>;<$x>;map{chomp;map{int}reverse split/\|/}(<$x>)};open$x,shift;%x=x($x);open$x,shift;%y=x($x);print"$_,$x{$_},$y{$_}\n"foreach(sort{$a<=>$b}keys%y)' $file ${file/mis/tot}> ${file/mis/count}; done

# Pull all csv data into a single file
find `date +%Y-%m-%d` -name '*csv' -exec head -1 {} \; | head -1 > all-`date +%Y-%m-%d`.csv ;find `date +%Y-%m-%d` -name '*csv' -exec sed -e'1d' {} \; >> all-`date +%Y-%m-%d`.csv

# Join separate data on a particular column into a single csv
join -t '|' -a 1 -a 2 -1 2 -2 2 -o 0,1.3,2.3 nonuser.csv lapse.csv | join -t '|' -a 1 -a 2 -1 2 -2 1 -o 0,1.3,2.2,2.3  refill.csv - | join -t '|' -a 1 -a 2 -1 2 -2 1 -o 0,1.3,2.2,2.3,2.4  appointment.csv - | tr -d ' ' | tr '|' ',' > per_day_sends.csv

# Create drop script from creation script
grep CREATE create.sql | tail -r | sed -e's/CREATE/DROP/' -e'/INDEX/d' -e's/).*/);/' -e's/ AS/;/' -e's/ ($/;/'

# Check out a number of repos all named the same by different authors
while read user; do  git clone -qo github git@github.com:`echo $user | awk '{print $2}'`/timestable.git -- ${user%% *} || echo ${user%% *}; done <~/users

# Extract answers from a book of tex files
for file in `sed -n s/^.include{//p Assembly.tex | sed s/}//`; do sed -n -e/chapter/p -e '/section{Exercises/,$p' $file.tex; done > answers
